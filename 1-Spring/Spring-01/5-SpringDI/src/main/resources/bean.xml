<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">


    <!-- Spring中的依赖注入 -->
    <!--
        依赖注入：Dependency Injection，DI
        IoC的作用：
            削减程序间的耦合（依赖关系）
        依赖关系的管理：
            spring来维护
        在当前类需要使用到其他类的对象，由spring为我们提供，我们只需要在配置文件中说明
        依赖关系的维护称之为依赖注入

        依赖注入：
            能注入的数据：有三类
                1.基本类型和String
                2.其他bean类型（在配置文件中或注解配置过的bean）
                3.集合类型
            注入的方式：有三种
                1.使用构造函数提供
                2.使用set方法提供
                3.使用注解提供
    -->

    <!-- 构造函数注入 -->
    <!--
        使用的标签:constructor-arg
        标签出现的位置：bean的内部
        标签中的属性
            type：用于指定要注入的数据的数据类型，该数据也是构造函数中某个或某些参数的类型
            index：用于指定要注入的数据给构造函数中指定索引位置的参数赋值
            name：用于指定给构造函数中指定名称的参数赋值（常用）
            ============以上三个用于指定给构造函数中的哪个参数赋值=============
            value：用于提供基本类型和String类型
            ref：用于指定其他的bean类型数据
        优势：
            在获取bean对象时，注入数据是必须的操作，否则对象无法创建成功。
        弊端：
            改变了bean对象的实例化方式，使我们在创建对象时，如果用不到这些数据，也必须提供。
    -->
    <bean id="accountService" class="com.sake.service.impl.AccountServiceImpl">
        <constructor-arg name="name" value="中文"/>
        <constructor-arg name="age" value="18"/>
        <constructor-arg name="birthday" ref="now"/>
    </bean>

    <!-- 配置一个日期对象 -->
    <bean id="now" class="java.util.Date"/>

    <!-- set方法注入 -->
    <!--
        使用的标签:property
        标签出现的位置：bean的内部
        标签中的属性:
            name：用于指定注入时所调用的set方法名称
            value：用于提供基本类型和String类型
            ref：用于指定其他的bean类型数据
        优势：
            创建对象时没有明确的限制，可以直接使用构造函数
        弊端:
            如果有某个成员必须有值，则set方法无法保证一定注入
    -->
    <bean id="accountService2" class="com.sake.service.impl.AccountServiceImpl2">
        <property name="name" value="王"/>
        <property name="age" value="21"/>
        <property name="birthday" ref="now"/>
    </bean>


    <!-- 集合类型的注入 -->
    <!--
        用于给List集合注入的标签
            list，array，set
        用于给Map集合注入的标签
            map，prop
    -->
    <bean id="accountService3" class="com.sake.service.impl.AccountServiceImpl3">
        <property name="myStrs">
            <array>
                <value>qwe</value>
                <value>asd</value>
                <value>zxc</value>
            </array>
        </property>
        <property name="myList">
            <list>
                <value>qwe</value>
                <value>asd</value>
                <value>zxc</value>
            </list>
        </property>
        <property name="mySet">
            <set>
                <value>qwe</value>
                <value>asd</value>
                <value>zxc</value>
            </set>
        </property>
        <property name="myMap">
            <map>
                <entry key="testA" value="AAA"/>
                <entry key="testB">
                    <value>BBB</value>
                </entry>
            </map>
        </property>
        <property name="myProps">
            <props>
                <prop key="testC">ASDSAJKFHA</prop>
                <prop key="testD">ASDSAJ</prop>
            </props>
        </property>
    </bean>

</beans>